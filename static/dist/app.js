angular.module("templates",[]),angular.module("navigation",[]),angular.module("common.models.post",["restangular"]),angular.module("posts",["common.models.post"]),angular.module("app",["restangular","ui.router","templates","navigation","posts"]);var app;app=angular.module("app"),app.config(["RestangularProvider",function(t){return t.setBaseUrl("http://localhost:3000"),t.setRestangularFields({id:"_id"})}]),app.run(["$rootScope","$state","$stateParams",function(t,e,n){return t.$state=e,t.$stateParams=n}]);var app;app=angular.module("app"),app.config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/"),t.state("posts",{url:"/",templateUrl:"posts/index/template.tpl.html",controller:"PostsIndexController",controllerAs:"ctrl"}).state("posts.new",{url:"posts/new"})}]),angular.module("navigation").run(["$rootScope",function(t){return t.navigationItems=[{name:"Add Post",icon:"plus",sref:"posts.new"},{name:"Home",icon:"content",sref:"posts"}]}]),angular.module("navigation").directive("navigationBar",function(){return{scope:{items:"="},restrict:"E",replace:!0,templateUrl:"navigation/navigation_bar_directive.tpl.html"}}),angular.module("navigation").directive("navigationItem",function(){return{scope:{title:"@",icon:"@",state:"@"},restrict:"E",require:"^navigationBar",replace:!0,templateUrl:"navigation/navigation_item_directive.tpl.html",controller:["$scope",function(t){return t.onSelect=function(e,n){return t.emit("menu:item:selected",n),e.preventDefault()}}]}}),angular.module("common.models.post").provider("Post",function(){var t;t=function(t){return t.addElementTransformer("posts",!1,function(t){return t.created_at=new Date(t.created_at),t})},this.$get=["Restangular",function(e){return e.withConfig(t).service("posts")}]}),angular.module("posts").controller("PostsIndexController",["$scope","Post",function(t,e){return e.getList().then(function(e){return t.posts=e})}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZXMuY29mZmVlIiwiY29uZmlnLmNvZmZlZSIsInJvdXRlci5jb2ZmZWUiLCJuYXZpZ2F0aW9uL21vZHVsZS5jb2ZmZWUiLCJuYXZpZ2F0aW9uL25hdmlnYXRpb25fYmFyX2RpcmVjdGl2ZS5jb2ZmZWUiLCJuYXZpZ2F0aW9uL25hdmlnYXRpb25faXRlbV9kaXJlY3RpdmUuY29mZmVlIiwiY29tbW9uL21vZGVscy9wb3N0X21vZGVsLmNvZmZlZSIsInBvc3RzL2luZGV4L2NvbnRyb2xsZXIuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFFBQVEsT0FBTyxnREFBZixRQUNRLE9BQU8sc0JBRGYsK0RBQUEsUUFFUSxPQUFPLHFCQUZmLHdCQUFBLDhCQ0FBLEtBQU0sUUFBUSxPQUFPLG1CQUFyQixzQkFHRSxTQUFBLEdBQ3lDLFNBQXpDLFdBQW9CLHlCQUF5QixFQUFKLHNCQUFBLEdBQUEsb0JBSjNDLGFBT0Usd0JBUEYsU0FBQSxFQUFBLEVBQUEsR0NBQSxrQkFBQSxFQUFBLGFBQUEsWUFBQSxLQUVJLFFBQU8sT0FBQyxPQUNWLElBQUEsUUFFQSxpQkFFSSxxQkFBQSxTQUNBLEVBQWEsR0FDYixFQUFZLFVBQUEsS0FDWixFQUFjLE1BSGQsU0FLRCxJQUFNLElBQ0wsWUFBSyxnQ0FYQSxXQUFBLHVCQUZYLGFBQUEseURDR1UsT0FBQSxjQUFBLEtBQUEsYUFBQSxTQUNNLEdBRE4sTUFFQSxHQUFNLGtCQUVOLEtBQU0sV0FDTixLQUFNLE9BQ04sS0FBTSxjQVRoQixLQUFBLHNCQ0FRLEtBQVIsYUFFSSxRQUVBLE9BQVUsY0FGVixVQUFBLGdCQUFBLFdBQUEsT0FJQSxPQUFBLE1BQWEsS0FMYSxTQUFBLElBRDlCLFNBQUEsZ0VDRUksUUFBQSxPQUNFLGNBQUEsVUFBQSxpQkFBQSxXQUFBLE9BQUEsT0FFQSxNQUFPLElBSFQsS0FBQSxJQUlBLE1BQUEsS0FFQSxTQUFTLElBQ1QsUUFBQSxpQkFDQSxTQUFBLGNBRUUsZ0RBQ0UscUJBRGdCLFNBRlIsR0FSWixNQUFBLEdBQUEsU0FBQSxTQUFBLEVBQUEsR0FGSixNQUMrQixHQUFBLEtBQUEscUJBQUEsR0FEL0IsRUFBQSx1QkNJUSxRQUFBLE9BQUssc0JBQTBCLFNBQUMsT0FBaEMsbUJBRk8sU0FBQSxHQUFYLE1BQUEsR0FBQSxzQkFBQSxTQUFBLEVBQUEsU0FBQSxTQU9DLEdBQUQsV0FBUyxHQUFBLE1BQUEsRUFBRCxZQUNOLGdCQ1ZOLHVCQUVTLFNBQ0gsR0FBQSxXQURrQixHQUFBLFFBQUEiLCJmaWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiYW5ndWxhci5tb2R1bGUoJ3RlbXBsYXRlcycsIFtdKVxuYW5ndWxhci5tb2R1bGUoJ25hdmlnYXRpb24nLCBbXSlcbmFuZ3VsYXIubW9kdWxlKCdjb21tb24ubW9kZWxzLnBvc3QnLCBbJ3Jlc3Rhbmd1bGFyJ10pXG5hbmd1bGFyLm1vZHVsZSgncG9zdHMnLCBbJ2NvbW1vbi5tb2RlbHMucG9zdCddKVxuXG5hbmd1bGFyLm1vZHVsZSAnYXBwJywgW1xuICAncmVzdGFuZ3VsYXInXG4gICd1aS5yb3V0ZXInXG4gICd0ZW1wbGF0ZXMnXG4gICduYXZpZ2F0aW9uJ1xuICAncG9zdHMnXG5dIiwiYXBwID0gYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG5cbmFwcC5jb25maWcgKCBSZXN0YW5ndWxhclByb3ZpZGVyICkgLT5cbiAgUmVzdGFuZ3VsYXJQcm92aWRlci5zZXRCYXNlVXJsICdodHRwOi8vbG9jYWxob3N0OjMwMDAnXG4gIFJlc3Rhbmd1bGFyUHJvdmlkZXIuc2V0UmVzdGFuZ3VsYXJGaWVsZHMgaWQ6ICdfaWQnXG5cbmFwcC5ydW4gKCRyb290U2NvcGUsICRzdGF0ZSwgJHN0YXRlUGFyYW1zKSAtPlxuICAkcm9vdFNjb3BlLiRzdGF0ZSA9ICRzdGF0ZVxuICAkcm9vdFNjb3BlLiRzdGF0ZVBhcmFtcyA9ICRzdGF0ZVBhcmFtcyIsImFwcCA9IGFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuXG5hcHAuY29uZmlnICgkc3RhdGVQcm92aWRlciwgJHVybFJvdXRlclByb3ZpZGVyKSAtPlxuICAkdXJsUm91dGVyUHJvdmlkZXIub3RoZXJ3aXNlKCcvJylcblxuICAkc3RhdGVQcm92aWRlclxuICAgIC5zdGF0ZSAncG9zdHMnLFxuICAgICAgdXJsOiAnLydcbiAgICAgIHRlbXBsYXRlVXJsOiAncG9zdHMvaW5kZXgvdGVtcGxhdGUudHBsLmh0bWwnXG4gICAgICBjb250cm9sbGVyOiAnUG9zdHNJbmRleENvbnRyb2xsZXInXG4gICAgICBjb250cm9sbGVyQXM6ICdjdHJsJ1xuXG4gICAgLnN0YXRlICdwb3N0cy5uZXcnLFxuICAgICAgdXJsOiAncG9zdHMvbmV3J1xuXG4gIHJldHVyblxuIiwiYW5ndWxhci5tb2R1bGUoJ25hdmlnYXRpb24nKVxuICAgLnJ1biAoJHJvb3RTY29wZSkgLT5cbiAgICAgICRyb290U2NvcGUubmF2aWdhdGlvbkl0ZW1zID0gW1xuICAgICAgICAgIG5hbWU6ICdBZGQgUG9zdCcsXG4gICAgICAgICAgaWNvbjogJ3BsdXMnXG4gICAgICAgICAgc3JlZjogJ3Bvc3RzLm5ldydcbiAgICAgICAgLFxuICAgICAgICAgIG5hbWU6ICdIb21lJyxcbiAgICAgICAgICBpY29uOiAnY29udGVudCdcbiAgICAgICAgICBzcmVmOiAncG9zdHMnXG4gICAgICBdXG4iLCJhbmd1bGFyLm1vZHVsZSAnbmF2aWdhdGlvbidcbiAgLmRpcmVjdGl2ZSAnbmF2aWdhdGlvbkJhcicsIC0+XG4gICAgc2NvcGU6XG4gICAgICBpdGVtczogJz0nXG4gICAgcmVzdHJpY3Q6ICdFJ1xuICAgIHJlcGxhY2U6IHllc1xuICAgIHRlbXBsYXRlVXJsOiAnbmF2aWdhdGlvbi9uYXZpZ2F0aW9uX2Jhcl9kaXJlY3RpdmUudHBsLmh0bWwnXG4iLCJhbmd1bGFyLm1vZHVsZSAnbmF2aWdhdGlvbidcbiAgLmRpcmVjdGl2ZSAnbmF2aWdhdGlvbkl0ZW0nLCAtPlxuICAgIHNjb3BlOlxuICAgICAgdGl0bGU6ICdAJ1xuICAgICAgaWNvbjogJ0AnXG4gICAgICBzdGF0ZTogJ0AnXG4gICAgcmVzdHJpY3Q6ICdFJ1xuICAgIHJlcXVpcmU6ICdebmF2aWdhdGlvbkJhcidcbiAgICByZXBsYWNlOiB5ZXNcbiAgICB0ZW1wbGF0ZVVybDogJ25hdmlnYXRpb24vbmF2aWdhdGlvbl9pdGVtX2RpcmVjdGl2ZS50cGwuaHRtbCdcbiAgICBjb250cm9sbGVyOiAoJHNjb3BlKSAtPlxuXG4gICAgICAkc2NvcGUub25TZWxlY3QgPSAoJGV2ZW50LCBzY29wZSkgLT5cbiAgICAgICAgJHNjb3BlLmVtaXQgJ21lbnU6aXRlbTpzZWxlY3RlZCcsIHNjb3BlXG4gICAgICAgICRldmVudC5wcmV2ZW50RGVmYXVsdCgpXG4iLCJhbmd1bGFyLm1vZHVsZSAnY29tbW9uLm1vZGVscy5wb3N0J1xuICAucHJvdmlkZXIgJ1Bvc3QnLCAtPlxuICAgIGNvbmZpZ0ZuID0gKGNvbmZpZ3VyZXIpIC0+XG4gICAgICBjb25maWd1cmVyLmFkZEVsZW1lbnRUcmFuc2Zvcm1lciAncG9zdHMnLCBmYWxzZSwgKHBvc3QpIC0+XG4gICAgICAgIHBvc3QuY3JlYXRlZF9hdCA9IG5ldyBEYXRlKHBvc3QuY3JlYXRlZF9hdClcblxuICAgICAgICBwb3N0XG5cblxuICAgIEAkZ2V0ID0gKFJlc3Rhbmd1bGFyKSAtPlxuICAgICAgUmVzdGFuZ3VsYXIud2l0aENvbmZpZyBjb25maWdGblxuICAgICAgICAuc2VydmljZSAncG9zdHMnXG5cblxuICAgIHJldHVyblxuXG5cbiIsImFuZ3VsYXIubW9kdWxlKCdwb3N0cycpXG4gIC5jb250cm9sbGVyICdQb3N0c0luZGV4Q29udHJvbGxlcicsICgkc2NvcGUsIFBvc3QpIC0+XG4gICAgUG9zdC5nZXRMaXN0KCkudGhlbiAocG9zdHMpIC0+XG4gICAgICAkc2NvcGUucG9zdHMgPSBwb3N0c1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9